{"version":3,"file":"dashboard_passingquota.min.js","sources":["../src/dashboard_passingquota.js"],"sourcesContent":["import {exception as displayException} from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport Passmodal from 'scormreport_question/modal_passgrade';\nimport $ from 'jquery';\n\n// This function updates the passing percentage circle to reflect the passigquota for a given threshold.\nconst update_passingquota_visual_for_threshold = (threshold, userscores) => {\n    let passing = 0;\n    for (let score of userscores) {\n        if (score >= threshold) {\n            passing++;\n        }\n    }\n    let percentage = passing * 100 / userscores.length;\n    percentage = Math.max(0, Math.min(Math.round(percentage), 100));\n    let percentagecircle = $('#scormreport_question_passingcontainer > .c100');\n    // The percentage is controlled via a css class, first we remove all previous percentages.\n    percentagecircle.removeClass((index, classname) => {\n        return (classname.match('p[0-9]{1,3}'));\n    });\n    // Now we add the new css class for the current threshold.\n    percentagecircle.addClass(`p${percentage}`);\n    let circletext = $('#scormreport_question_passingcontainer > .c100 > .percentagecircledefaulttext');\n    // @codingStandardsIgnoreStart The % is interpreted as mod operator by coding standards.\n    // And update the text in the circle.\n    circletext.text(`${percentage}%`); //eslint-disable-line\n    // @codingStandardsIgnoreEnd\n};\n\n// This function prepares a modal that is shown when the settings icon next to the passing percentage circle is pressed.\n// It also initializes the passing percentage circle to display data for a threshold of 50%.\nexport const init = (userscores) => {\n    ModalFactory.create({\n        'type': Passmodal.TYPE,\n    }).then((modal) => {\n        modal.savepressedcallback = () => {\n            let passtreshold = parseFloat($('#inputpercentage').val());\n            if (isNaN(passtreshold)) {\n                return;\n            }\n            update_passingquota_visual_for_threshold(passtreshold, userscores);\n            modal.hide();\n        };\n        $('#scormreport_question_settings').click(() => {\n            modal.show();\n        });\n        return true;\n    }).catch(ex => displayException(ex));\n    update_passingquota_visual_for_threshold(50, userscores);\n};"],"names":["_modal_factory","_interopRequireDefault","_modal_passgrade","_jquery","update_passingquota_visual_for_threshold","threshold","userscores","_step","passing","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","percentage","length","Math","max","min","round","percentagecircle","$","default","removeClass","index","classname","match","addClass","concat","text","ModalFactory","create","type","Passmodal","TYPE","then","modal","savepressedcallback","passtreshold","parseFloat","val","isNaN","hide","click","show","catch","ex","displayException"],"mappings":"ioDACAA,eAAAC,uBAAAD,gBACAE,iBAAAD,uBAAAC,kBACAC,QAAAF,uBAAAE,SAGA,IAAMC,yCAA2C,SAACC,UAAWC,YACzD,IADwEC,MACpEC,QAAU,EAD0DC,UAAAC,2BAEtDJ,YAFsD,IAExE,IAA8BG,UAAAE,MAAAJ,MAAAE,UAAAG,KAAAC,MAAA,CAAAN,MAAAO,OACbT,WACTG,SAEP,CANuE,CAAA,MAAAO,KAAAN,UAAAO,EAAAD,IAAA,CAAA,QAAAN,UAAAQ,GAAA,CAOxE,IAAIC,WAAuB,IAAVV,QAAgBF,WAAWa,OAC5CD,WAAaE,KAAKC,IAAI,EAAGD,KAAKE,IAAIF,KAAKG,MAAML,YAAa,MAC1D,IAAIM,kBAAmB,EAAAC,QAAAC,SAAE,kDAEzBF,iBAAiBG,aAAY,SAACC,MAAOC,WACjC,OAAQA,UAAUC,MAAM,kBAG5BN,iBAAiBO,SAAjB,IAAAC,OAA8Bd,cACb,EAAAO,QAAAC,SAAE,iFAGRO,KAAX,GAAAD,OAAmBd,WAAnB,qBAMgB,SAACZ,YACjB4B,eAAAR,QAAaS,OAAO,CAChBC,KAAQC,yBAAUC,OACnBC,MAAK,SAACC,OAYL,OAXAA,MAAMC,oBAAsB,WACxB,IAAIC,aAAeC,YAAW,EAAAlB,QAAAC,SAAE,oBAAoBkB,OAChDC,MAAMH,gBAGVtC,yCAAyCsC,aAAcpC,YACvDkC,MAAMM,UAEV,EAAArB,iBAAE,kCAAkCsB,OAAM,WACtCP,MAAMQ,WAEH,CACV,IAAEC,OAAM,SAAAC,IAAE,OAAI,EAAAC,cAAAA,WAAiBD,OAChC9C,yCAAyC,GAAIE"}