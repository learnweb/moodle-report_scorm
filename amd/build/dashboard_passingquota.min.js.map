{"version":3,"sources":["../src/dashboard_passingquota.js"],"names":["draw_passingquota_for_threshold","threshold","userscores","passing","score","percentage","length","Math","max","min","round","percentagecircle","removeClass","index","classname","match","addClass","circletext","text","init","ModalFactory","create","Passmodal","TYPE","then","modal","savepressedcallback","passtreshold","parseFloat","val","isNaN","hide","click","show","catch","ex"],"mappings":"2PACA,OACA,OACA,O,4lCAGMA,CAAAA,CAA+B,CAAG,SAACC,CAAD,CAAYC,CAAZ,CAA2B,IAC3DC,CAAAA,CAAO,CAAG,CADiD,KAE7CD,CAF6C,QAE/D,2BAA8B,IAArBE,CAAAA,CAAqB,SAC1B,GAAIA,CAAK,EAAIH,CAAb,CAAwB,CACpBE,CAAO,EACV,CACJ,CAN8D,+BAO/D,GAAIE,CAAAA,CAAU,CAAa,GAAV,CAAAF,CAAO,CAASD,CAAU,CAACI,MAA5C,CACAD,CAAU,CAAGE,IAAI,CAACC,GAAL,CAAS,CAAT,CAAYD,IAAI,CAACE,GAAL,CAASF,IAAI,CAACG,KAAL,CAAWL,CAAX,CAAT,CAAiC,GAAjC,CAAZ,CAAb,CACA,GAAIM,CAAAA,CAAgB,CAAG,cAAE,gDAAF,CAAvB,CAEAA,CAAgB,CAACC,WAAjB,CAA6B,SAACC,CAAD,CAAQC,CAAR,CAAsB,CAC/C,MAAQA,CAAAA,CAAS,CAACC,KAAV,CAAgB,aAAhB,CACX,CAFD,EAIAJ,CAAgB,CAACK,QAAjB,YAA8BX,CAA9B,GACA,GAAIY,CAAAA,CAAU,CAAG,cAAE,+EAAF,CAAjB,CAGAA,CAAU,CAACC,IAAX,WAAmBb,CAAnB,MAEH,C,CAIYc,CAAI,CAAG,SAACjB,CAAD,CAAgB,CAChCkB,UAAaC,MAAb,CAAoB,CAChB,KAAQC,UAAUC,IADF,CAApB,EAEGC,IAFH,CAEQ,SAACC,CAAD,CAAW,CACfA,CAAK,CAACC,mBAAN,CAA4B,UAAM,CAC9B,GAAIC,CAAAA,CAAY,CAAGC,UAAU,CAAC,cAAE,kBAAF,EAAsBC,GAAtB,EAAD,CAA7B,CACA,GAAIC,KAAK,CAACH,CAAD,CAAT,CAAyB,CACrB,MACH,CACD3B,CAA+B,CAAC2B,CAAD,CAAezB,CAAf,CAA/B,CACAuB,CAAK,CAACM,IAAN,EACH,CAPD,CAQA,cAAE,gCAAF,EAAoCC,KAApC,CAA0C,UAAM,CAC5CP,CAAK,CAACQ,IAAN,EACH,CAFD,EAGA,QACH,CAfD,EAeGC,KAfH,CAeS,SAAAC,CAAE,QAAI,gBAAiBA,CAAjB,CAAJ,CAfX,EAgBAnC,CAA+B,CAAC,EAAD,CAAKE,CAAL,CAClC,C","sourcesContent":["import {exception as displayException} from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport Passmodal from 'scormreport_question/modal_passgrade';\nimport $ from 'jquery';\n\n// This function updates the passing percentage circle to reflect the passigquota for a given threshold.\nconst draw_passingquota_for_threshold = (threshold, userscores) => {\n    let passing = 0;\n    for (let score of userscores) {\n        if (score >= threshold) {\n            passing++;\n        }\n    }\n    let percentage = passing * 100 / userscores.length;\n    percentage = Math.max(0, Math.min(Math.round(percentage), 100));\n    let percentagecircle = $('#scormreport_question_passingcontainer > .c100');\n    // The percentage is controlled via a css class, first we remove all previous percentages.\n    percentagecircle.removeClass((index, classname) => {\n        return (classname.match('p[0-9]{1,3}'));\n    });\n    // Now we add the new css class for the current threshold.\n    percentagecircle.addClass(`p${percentage}`);\n    let circletext = $('#scormreport_question_passingcontainer > .c100 > .percentagecircledefaulttext');\n    // @codingStandardsIgnoreStart The % is interpreted as mod operator by coding standards.\n    // And update the text in the circle.\n    circletext.text(`${percentage}%`); //eslint-disable-line\n    // @codingStandardsIgnoreEnd\n};\n\n// This function prepares a modal that is shown when the settings icon next to the passing percentage circle is pressed.\n// It also initializes the passing percentage circle to display data for a threshold of 50%.\nexport const init = (userscores) => {\n    ModalFactory.create({\n        'type': Passmodal.TYPE,\n    }).then((modal) => {\n        modal.savepressedcallback = () => {\n            let passtreshold = parseFloat($('#inputpercentage').val());\n            if (isNaN(passtreshold)) {\n                return;\n            }\n            draw_passingquota_for_threshold(passtreshold, userscores);\n            modal.hide();\n        };\n        $('#scormreport_question_settings').click(() => {\n            modal.show();\n        });\n        return true;\n    }).catch(ex => displayException(ex));\n    draw_passingquota_for_threshold(50, userscores);\n};"],"file":"dashboard_passingquota.min.js"}